<#
.SYNOPSIS
    Automation Script
.DESCRIPTION
    Start or Stop VMS List with system-assigned managed identity 
.PARAMETER AzureSubscriptionId
    Azure Subscription ID
.PARAMETER AzureResourceGroup
    Azure Resource Group Name
.PARAMETER AzureVMList
    Azure VM Names separated by commas
.PARAMETER Action
    Action Command Start or Stop Virtual Machine
.NOTES
    Author: Carlos Stange
    Date:   Apr 25, 2024    
#>
Workflow Stop-Start-AzureVM 
{

    Param 
    (    
        [Parameter(Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [String]$AzureSubscriptionId, 
        
        [Parameter(Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [String]$AzureResourceGroup, 
        
        [Parameter(Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [String]$AzureVMList, 
        
        [Parameter(Mandatory=$true)]
        [ValidateSet("Start","Stop")]
        [String]$Action 
    ) 

    # Ensures you do not inherit an AzContext in your runbook
    Disable-AzContextAutosave -Scope Process

    # Connect to Azure with system-assigned managed identity | Connect-AzAccount -Identity -AccountId <ClientId>
    Write-Output "Connect to Azure"
    Connect-AzAccount -Identity

    # set and store context
    $AzureContext = Set-AzContext â€“SubscriptionId $AzureSubscriptionId

    # Lis of Vms
    [System.Collections.ArrayList]$VMs = $AzureVMList.Split(",")      

    if ($action -eq "Start")
    {
        ForEach -Parallel ($vm in $VMs)
        {
            Write-Output "$vm Starting"
            Start-AzVM -Name $vm -ResourceGroupName $AzureResourceGroup -DefaultProfile $AzureContext
        }
    }
    if ($action -eq "Stop") 
    {
        ForEach -Parallel ($vm in $VMs)
        {
            Write-Output "$vm Stopping"
            Stop-AzVM -Name $vm -ResourceGroupName $AzureResourceGroup -DefaultProfile $AzureContext -Force
        }
    }    

}
